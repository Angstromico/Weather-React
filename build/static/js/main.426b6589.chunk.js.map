{"version":3,"sources":["components/Header.js","components/context.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["Header","title","props","className","href","AppContext","React","createContext","AppProvider","children","useReducer","values","newValue","city","country","setValues","useState","result","setResult","alert","setAlert","useEffect","eliminateAlert","setTimeout","clearTimeout","Provider","value","handleSubmit","e","preventDefault","url","fetch","then","respond","json","data","catch","error","console","log","htmlWeather","kelvin","name","weather","main","icon","temp","toFixed","src","alt","temp_max","temp_min","useGlobalContext","useContext","Form","Fragment","onSubmit","type","id","onChange","target","htmlFor","defaultValue","Weather","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426b6589.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({ props }) => {\n  const { title } = props;\n  return (\n    <header>\n      <div className=\"nav-wrapper light-blue darken-2\">\n        <a href=\"/\" className=\"brand-logo\">\n          {title}\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useReducer, useContext, useState, useEffect } from 'react';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [values, setValues] = useReducer(\n    (values, newValue) => ({ ...values, ...newValue }),\n    {\n      city: '',\n      country: '',\n    }\n  );\n  const [result, setResult] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { city, country } = values;\n\n    if (!city || !country) {\n      setAlert(true);\n      setResult(false);\n      return;\n    }\n\n    const appId = 'ecc881b8a6a2186f7337b8bb0ec2d427';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${appId}`;\n\n    //Query to API with Fetch API\n    fetch(url)\n      .then((respond) => {\n        return respond.json();\n      })\n      .then((data) => setResult(data))\n      .catch((error) => console.log(error));\n  };\n  const htmlWeather = () => {\n    if (result) {\n      const kelvin = 273.15;\n      const { name, weather, main } = result;\n      const icon = `http://openweathermap.org/img/wn/${weather[0].icon}.png`;\n      return (\n        <div className=\"row\">\n          <div className=\"resultado col s12 m8 l6 offset-m2 offset-l3\">\n            <div className=\"card-panel light-blue align-center\">\n              <span className=\"white-text\">\n                <h2>Weather Result: {name}</h2>\n                <p className=\"temperatura\">\n                  Current Temperature: {(main.temp - kelvin).toFixed(2)} °C\n                  <img src={icon} alt={`Weather of ${name}`} />\n                </p>\n                <p>Max: {(main.temp_max - kelvin).toFixed(2)} °C</p>\n                <p>Min: {(main.temp_min - kelvin).toFixed(2)} °C</p>\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  useEffect(() => {\n    const eliminateAlert = setTimeout(() => {\n      setAlert(false);\n    }, 5000);\n    return () => clearTimeout(eliminateAlert);\n  }, [alert]);\n  return (\n    <AppContext.Provider\n      value={{\n        handleSubmit,\n        values,\n        setValues,\n        alert,\n        result,\n        htmlWeather,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst Form = () => {\n  const { values, setValues, handleSubmit, alert } = useGlobalContext();\n  const { city, country } = values;\n  return (\n    <React.Fragment>\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"input-field col s12 m8 l4 offset-m2\">\n                <input\n                  type=\"text\"\n                  name=\"city\"\n                  id=\"city\"\n                  value={city}\n                  onChange={(e) => {\n                    setValues({ city: e.target.value });\n                  }}\n                />\n                <label htmlFor=\"city\" className=\"label\">City:</label>\n              </div>\n              <div className=\"input-field col s12 m8 l4 offset-m2\">\n                <select\n                  id=\"country\"\n                  name=\"country\"\n                  value={country}\n                  onChange={(e) => {\n                    setValues({ country: e.target.value });\n                  }}\n                >\n                  <option value=\"\" defaultValue>\n                    -- Chose a Country --\n                  </option>\n                  <option value=\"AR\">Argentina</option>\n                  <option value=\"CO\">Colombia</option>\n                  <option value=\"CR\">Costa Rica</option>\n                  <option value=\"ES\">España</option>\n                  <option value=\"MX\">Mexico</option>\n                  <option value=\"US\">United States of America</option>\n                  <option value=\"UK\">United Kingdom</option>\n                  <option value=\"VE\">República Bolivariana de Venezuela</option>\n                  <option value=\"NO\">Norway</option>\n                  <option value=\"RU\">Russia</option>\n                  <option value=\"kr\">Republic of Korea</option>\n                  <option value=\"nl\">Netherlands</option>\n                  <option value=\"PE\">Perú</option>\n                </select>\n                <label htmlFor=\"country\" className=\"label\">Country:</label>\n              </div>\n              <div className=\"input-field col s12 m8 l4 offset-m2 buscador\">\n                <input\n                  type=\"submit\"\n                  className=\"waves-effect waves-light btn-large yellow accent-4\"\n                  value=\"Search...\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {alert && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"alert-message\">\n            <h2>You must fill all the fields</h2>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nconst Weather = () => {\n  const { htmlWeather } = useGlobalContext();\n  return <div className=\"container\">{htmlWeather()}</div>;\n};\nexport default Weather;\n","import React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport { useGlobalContext } from './components/context';\nfunction App() {\n  const props = { title: 'Weather App' };\n  const { result } = useGlobalContext();\n  return (\n    <section className=\"app\">\n      <Header props={props} />\n      <Form />\n      {result && <Weather />}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/normalize.css';\nimport App from './App';\nimport { AppProvider } from './components/context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}